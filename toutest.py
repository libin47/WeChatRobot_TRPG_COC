import re

def extract_data(text):
    weapon_data = {}

    # 武器名称
    weapon_name_match = re.search(r'【(.+?)】', text)
    if weapon_name_match:
        weapon_data["名称"] = weapon_name_match.group(1)

    # 技能类型
    skill_match = re.search(r'技能：(.+)', text)
    if skill_match:
        weapon_data["技能"] = skill_match.group(1)

    # 伤害
    damage_match = re.search(r'伤害：(.+)', text)
    if damage_match:
        weapon_data["伤害"] = damage_match.group(1)

    # 次数
    times_match = re.search(r'次数：(\d+)', text)
    if times_match:
        weapon_data["次数"] = int(times_match.group(1))

    # 贯穿
    penetration_match = re.search(r'非贯穿', text)
    weapon_data["贯穿"] = bool(not penetration_match)

    # 射程
    range_match = re.search(r'射程：(.+)', text)
    if range_match:
        weapon_data["射程"] = range_match.group(1)

    # 装弹量
    ammo_match = re.search(r'装弹量：(.+)', text)
    if ammo_match and ammo_match.group(1) != "N/A":
        try:
            weapon_data["装弹量"] = int(ammo_match.group(1))
        except:
            try:
                weapon_data["装弹量"] = int(ammo_match.group(1).split("/")[-1])
            except:
                weapon_data["装弹量"] = -1
    else:
        weapon_data["装弹量"] = -1

    # 故障率
    failure_rate_match = re.search(r'故障率：(.+)', text)
    if failure_rate_match and failure_rate_match.group(1) != "N/A":
        weapon_data["故障率"] = int(failure_rate_match.group(1))
    else:
        weapon_data["故障率"] = -1

    return weapon_data

def number2num(s):
    # print(s)
    s=s.strip()
    if s=="一":
        return 1
    elif s=="二":
        return 2
    elif s=="三":
        return 3
    elif s=="四":
        return 4
    elif s=="五":
        return 5



def extract_work(text):
    weapon_data = {}

    # 武器名称
    weapon_name_match = re.search(r'\n(.+?)\n信用评级', text)
    if weapon_name_match:
        weapon_data["name"] = weapon_name_match.group(1)

    # 技能类型
    skill_match = re.search(r'信用评级：(.+)\n', text)
    if skill_match:
        weapon_data["信用评级"] = [int(x) for x in skill_match.group(1).split("~")]

    # 伤害
    damage_match = re.search(r'本职技能：(.+)', text)
    if damage_match:
        weapon_data["describe"] = damage_match.group(1)

    # 技能
    skilllist = weapon_data["describe"].split("、")
    result = []
    for text in skilllist:
        # if "射击(" in text:
        #     print(text)
        if text=="格斗(斗殴)":
            result.append({"name": text})
            continue
        select_match = re.search(r'选(.+)\((.+)\)', text)
        if select_match:
            number = number2num(select_match.group(1))
            sklist = select_match.group(2).split(",")
            sklistresult = []
            for sk in sklist:
                if len(sk.split(":"))>1:
                    n, sn = sk.split(":")
                    if sn == "任一":
                        sklistresult.append({"name": n})
                    else:
                        sklistresult.append({"name": n, "sub_name": sn})
                else:
                    sklistresult.append({"name": sk})
            result.append({"number": number, "area": "list", "list": sklistresult})
            continue
        select_match = re.search(r'(.+)\(任(.+)\)', text)
        if select_match:
            number = number2num(select_match.group(2))
            name = select_match.group(1)
            if "其他" in name:
                result.append({"number": number, "area": "all"})
            else:
                for i in range(number):
                    result.append({"name": name})
            continue
        select_match = re.search(r'(.+)\((.+)\)', text)
        if select_match:
            subname = select_match.group(2)
            name = select_match.group(1)
            result.append({"name": name, "sub_name": subname})
            continue
        result.append({"name": text})
    result.append({ "name": "信用评级" })
    weapon_data["skill"] = result
    return weapon_data
# 测试
text = """
冒险家 无冒险，不生活！世界这么大，充满了机遇与挑战，有太多值得去体验的事物。办公桌后朝九晚五的生活对这样的人来说简直就是死刑。冒险家们渴望刺激、乐趣与挑战。 核心属性：DEX或APP 将100个奖励点数分配给：取悦，潜水，汽车驾驶，急救，格斗(任意)，射击(任意)，跳跃，语言(任意)，机械维修，操纵(任意)，骑术，潜行，生存(任意)，游泳。 建议职业：演员，考古学家，运动员，特技飞行员，银行劫匪，猎人，窃贼，业余艺术爱好者，流浪者，赌徒，黑帮分子，游民，调查记者，传教士，护士，摄影师，护林员，士兵，部落成员。 天赋：任选两项。 建议特质：容易无聊，坚韧，荣耀猎人，自负。 
猛士 强壮，肌肉发达，能够自行处理严峻的形势。力求追寻肉体的完美。你不会在图书馆中找到这类人，但可能会在广告牌上看到他们。猛士有两种类型：安静的，或是吵闹的。 核心属性：STR 将100个奖励点数分配给：取悦，格斗(斗殴)，恐吓，聆听，机械维修，精神分析，游泳，投掷。 建议职业：运动员，警探，猎人，拳击手，艺人，黑帮，打手，游民，临时工，工人，技师，海员，士兵，混混，部落成员。 天赋：任选两项。 建议特质：专横，傲慢，安静的，以自我中心，不易怒，容怒。 
行乐者 行乐者是善于享受生活的人，但这并不意味着他们一定很有钱，虽然他们当中很多人已经习惯了财富。行乐者尽情享受生活而不去考虑后果。为什么到明天才能开始享受？美食和饮料，还有其他美好的事物，这些都是美好生活的关键。无论贫穷还是富有，这样的人都很少考虑储蓄以备不时之需，他们更愿意成为被人瞩目的焦点，愿意和所有人做朋友。 核心属性：SIZ 将100个奖励点数分配给：估价，技艺(任意)，取悦，话术，语言(任意)，聆听，侦查，精神分析。 建议职业：演员，艺术家，管家，欺诈师，教团首领，业余艺术爱好者，政府官员，艺人，赌徒，飞贼，绅士/淑女，军官，音乐家，神职人员，教授，狂热者。 天赋：任选两项。 建议特质：铺张浪费，贪心，松鼠党，收藏家，自信，自负，引人注目，和善，慷慨。
无情斗士 万事皆允的理性主义者。无情斗士可能会遵循一些扭曲的道德准则，但他们看待人性时冷酷而死板——你是好人还是坏人？这当中没有灰色地带，只有攸关性命的严酷现实。他们都能成为合格的杀手，因为他们很少怀疑自己。他们从遵循信件中发来的指令，或是奉行自己的复仇计划。这样的人为了完成工作能够做出任何事。有时他们会欺骗自己，从而相信自己有一条绝不会跨过的“底线”，但事实上他们残忍而无情，会不遗余力地实现他们定下的目标。 核心属性：INT 将100个奖励点数分配给：技 艺 (表演)，乔装，格斗(任意)，射击(任意)，急救，历史，恐吓，法律，聆听，机械维修，精神分析，潜行，生存(任意)，追踪。 建议职业：银行劫匪，警探，猎人，教团首领，流浪者，驱魔师，联邦探员，黑帮，飞贼，打手，刺客，教授，通讯记者，士兵，混混，部落成员，狂热者。 天赋：必须选择“坚定不移”，再任选另一项。 建议特质：理性主义者，世界非黑即白，残忍，无情，冷酷，蛮横，坚定。
梦想家 无论是理想主义者还是空想家，梦想家们都拥有强大而炽热的精神。他们往往都遵循着自己的生活目标。梦想家看起来超越了平凡的现实生活，也许是在逃避现实，也许他们向往未来的可能，希望能够纠正错误，或是改变世界。 核心属性：POW 将100个奖励点数分配给：技艺(任意)，取悦，历史，语言(任意)，图书馆使用，聆听，博物学，神秘学。 建议职业：艺术家，作家，酒保/服务生，神职人员，教团首领，业余艺术爱好者，流浪者，政府官员，赌徒，绅士/淑女，游民，性工作者，图书馆管理员，音乐家，护士，神秘学家，教授，秘书，学生，部落成员。 天赋：任选两项，建议选择“钢铁意志”。 建议特质：理想主义者，乐观主义者，懒惰，慷慨，安静，体贴，总是迟到。 
极客 万物皆可被拆解和分析以便了解其工作原理。知识是宝物，充满了探索的乐趣。谁说学者都是书呆子？极客们奉行实践主义，且不介意弄脏自己的手。无论电线、齿轮、阀门、计算机引擎还是血液和骨头，极客们都希望弄清楚它们是如何运转的。它们也许是出神的天才，或是犀利的艺术家，极客很容易专注于眼前的问题而忽视周围的事情。 根据游戏的通俗程度，极客可能会发明各种有用或无用的小玩意儿，详见怪奇技术，86页。 核心属性：INT或EDU 将100个奖励点数分配给：人类学，估价，计算机使用，电气维修，语言(任意)，图书馆使用，机械维修，操作重型机械，科学(任意)。 建议职业：管家，教团首领，医生，工程师，绅士/淑女，调查记者，技师，神职人员，科学家。 天赋：任选两项。 建议特质：学问渊博，专注，只注意眼前，情报收集者，不太注意周围，缺乏常识，发明家，不可靠。
探险者 “别拦我！”探险者经常如此喊着，向往真实而充实的生活。 他们意志坚强，几乎不可动摇，探险者一直在追寻地平线上的事物。 他很可能已经融入自然生活之中，满足于就地而眠，愉快地蔑视城市生活的舒适。 无论是穿越丛林，深入洞穴，还是简单地绘制城市中的隐藏区域，探险者常被他眼中的“弱者”或“懦夫”搞得焦躁不安，从而与他人格格不入。 核心属性：DEX或POW 将100个奖励点数分配给：驯兽，人类学，取悦，格斗(斗殴)，急救，跳跃，语言(任意)，博物学，导航，操纵(任意)，骑术，潜行，生存(任意)，追踪。 建议职业：事务所侦探，考古学家，猎人，业余艺术爱好者，探险家，司机，飞贼，临时工，调查记者，传教士，摄影师，旅行家，海员，士兵，部落成员。 天赋：任选两项。 建议特质：离群者，勇敢，不适应环境，孤独，乐观，意志坚强，天生的领袖，不安。
蛇蝎美人 蛇蝎美人的外在美貌常常掩盖了她们以自我为中心，时刻保持警惕的生活方式，这导致她们对别人而言十分危险。蛇蝎美人会像蜘蛛一样，通过构建一个诱惑迷人的外貌形象，将其他人吸引到她的网上，以便夺其所好或毁其所恶。她们勇敢又狡猾，不羞于亲自动手，是个难缠的敌人。蛇蝎美人绝不蛮干，她会等到她的网织好后才会进行一次突然而适时的攻击（无论是精神还是肉体）。如果需要的话，一个典型的蛇蝎美人英雄很容易地被人认为是同性恋。 译注：男性英雄也可以选择该类型。 核心属性：APP或INT 将100个奖励点数分配给：技艺(表演)，估价，取悦，乔装，汽车驾驶，话术，格斗(斗殴)，射击(手枪)，聆听，精神分析，妙手，潜行。 建议职业：演员，事务所侦探，作家，窃贼，欺诈师，业余艺术爱好者，政府官员，艺人，联邦探员，黑帮，飞贼，刺客，性工作者，调查记者，音乐家，护士，私家侦探，通讯记者，间谍，狂热者。 天赋：任选两项，建议选择“魅力四射”。 建议特质：迷人，充满魅力，性格恶劣，狡诈，滑头，专注，不诚实。 
机械师 机械师们很有想法，能够制造和修理各种各样的玩意儿，无论是有用的发明，机器，引擎还是其他设备。人们可能会在汽车引擎盖下找到机械师，或者发现他们正在玩弄着电话交换线。机械师通常都拥有一种“这个可以！”的处事态度，他们有能力充分利用手边的事物，搭配他们的技能和经验做出使旁人惊叹的事。 根据游戏的通俗程度，机械师或许能够制作各种用处不明的奇妙道具。详见怪奇技术。 核心属性：INT 将100个奖励点数分配给：估价，技艺(任意)，格 斗 (斗殴)，汽车驾驶，电气维修，锁匠，机械维修，操作重型机械，侦查，投掷。 建议职业：酒保/服务生，管家，窃贼，私人司机，流浪者，工程师，司机，游民，临时工，技师，海员，士兵，学生，工会活动家。 天赋：任选两项。 建议特质：踏实，亲力亲为，工作认真，油污，有能力。
反英雄 反英雄们很清楚，想要抓住一个小偷，必须先像小偷一样思考。反英雄常常会为了达成目的而违反法律。他们在行动时会使用任何工具（不择手段），甚至砸碎别人的脑袋（草菅人命）。虽然他们的内在是希望世界不再那么卑鄙和污秽的诚实灵魂，但是，为了伸张正义，他们敢于弄脏自己的双手。 核心属性：CON 将100个奖励点数分配给：技艺(任意)，格斗(斗殴)，射击(任意)，汽车驾驶，话术，恐吓，法律，聆听，锁匠，妙手，侦查，潜行，投掷。 建议职业：事务所侦探，银行劫匪，警探，猎人，拳击手，黑帮，飞贼，工人，警探，私家侦探，旅行家，工会活动家。 天赋：任选两项。 建议特质：愤世嫉俗，客观，实用主义，厌世，腐败，暴力。 
幕后玩家 虽然类似于蛇蝎美人，但幕后玩家不喜欢亲自动手（如果这会有所帮助）。虽然幕后玩家不一定拥有传统意义上的亮丽外表，但他们通常具有足够吸引人的人格魅力。他们以从操纵他人达成自己的目的为乐趣，并且经常将自己的计划隐藏在显而易见的谎言或微不可查的欺骗背后。他们或许是为了某个上家服务，又或许单纯的只是混乱的代理人，通过观察人们面对他设下的陷阱时的反应取乐。 核心属性：APP 将100个奖励点数分配给：技艺(表演)，取悦，乔装，话术，跳跃，语言(任意)，聆听，说服，精神分析，妙手，潜行。 建议职业：演员，事务所侦探，艺术家，酒保/服务生，欺诈师，教团首领，业余艺术爱好者，政府官员，艺人，赌徒，绅士/淑女，音乐家，通讯记者，秘书，工会活动家，狂热者。 天赋：任选两项。 建议特质：深谋远虑，狡猾，两面派，好指使人，无序，狂野，华丽。 
老猎人 或许是追寻狩猎过程的刺激，或许是为了最终的战果，或许仅仅因为他们天生主宰一切的本能，老猎人在狩猎时总是冷酷无情。 沉着冷静，精于算计的老猎人更愿意等待最合适的时机，而鄙视粗心大意的鲁莽行为。 核心属性：INT或CON 将100个奖励点数分配给：驯兽，格斗(任意)，射击(步枪/霰弹枪 或 手枪)，急救，聆听，博物学，导航，侦查，潜行，生存(任意)，游泳，追踪。 建议职业：事务所侦探，银行劫匪，警探，猎人，拳击手，黑帮，飞贼，工人，警探，私家侦探，旅行家，工会活动家。 天赋：任选两项。 建议特质：无情，狡猾，耐心，被驱使，沉着，安静。 
寻秘者 奥秘的探求者，未知领域的探索者。寻秘者致力于探知这个世界最基本的真理。他们可能是满腹经纶的学者，萨满教巫医，剧团占卜师或是空想家，无论是为了个人利益还是全人类的进步，他们都在追寻知识和超自然能力。如果守秘人同意，寻秘者可以拥有超乎想象的超自然力量。这类人经常受到迫害和猎杀，所以他们会对那些称自己为“巫师”的人隐瞒自己的“天赋”，外人则会认为他们只是江湖骗子或是小丑。这类英雄应该选择“灵能觉醒”天赋（原文如此），并允许他们为一个或多个灵能投入技能点，见灵能，83页。 核心属性：POW 将100个奖励点数分配给：技艺(任意)，科学(天文学)，乔装，历史，催眠，语言(任意)，博物学，神秘学，精神分析，妙手，潜行；如有“灵能觉醒”天赋，可将点数分配给所选的灵能技能。 建议职业：艺术家，教团首领，业余艺术爱好者，驱魔师，艺人，神秘学家，超心理学家，部落成员。 天赋：任选两项，建议选择“灵能觉醒”。 建议特质：深谋远虑，狡猾，两面派，好指使人，无序，狂野，华丽。 
局外人 无论是象征意义还是字面意思，局外人都与社会外界格格不入。这类人可能与他们生活的环境方枘圆凿，他们也许来自异国他乡，又或者虽然是社会的一部分，但却始终无法融入他们。局外人通常在肉体或精神上进行着某种形式的旅程，在他们回归或是融入集体之前，他们必须先完成自己的使命。大多局外人拥有独特的技能和处事方式，能够利用被外人遗忘的知识、秘密或是异端学识。 核心属性：INT或CON 将100个奖励点数分配给：技 艺 (任意)，驯兽，格斗(任意)，急救，恐吓，语言(任意)，聆听，医学，导航，潜行，生存(任意)，追踪。 建议职业：艺术家，流浪者，探险家，打手，临时工，工人，护士，神秘学家，旅行家，部落成员。 天赋：任选两项。 建议特质：冷酷，安静，超然，冷漠，残忍。 
叛逆浪人 叛逆狼人无视社会规则，敢于公开质疑现状，嘲讽权威。他们冲动行事，鄙视传统，不愿墨守成规。在他们眼中，法律就是要被钻空子甚至被打破。但多数叛逆浪人并非意图散播混乱的犯罪分子或无政府主义者，他们通过迷惑他人来寻找乐趣。这类人往往是复杂的，他们冷漠而迷人，有着自己独特的道德准则。 核心属性：DEX或APP 将100个奖励点数分配给：估价，技艺(任意)，取悦，乔装，话术，法律，锁匠，精神分析，读唇，侦查，潜行。 建议职业：艺术家，银行劫匪，窃贼，欺诈师，业余艺术爱好者，艺人，赌徒，司机，间谍，学生。 天赋：任选两项。 建议特质：迷人，使人安心，固执己见，狡猾，精明，富于心计。 
学者 他们利用情报和分析了解周围的世界。学者们通常更喜欢坐在图书馆里，而不是去面对现实生活。作为知识的探求者，学者并不以行动为导向，不过，在紧要关头，学者们可能是唯一只要要怎么做的人。 核心属性：EDU 将100个奖励点数分配给：会计，人类学，密码学，历史，语言(任意)，图书馆使用，医学，博物学，神秘学，科学(任意)。 建议职业：考古学家，作家，医生，图书馆管理员，超心理学家，教授，科学家。 天赋：任选两项。 建议特质：好学，书卷气，自傲，高人一等，孤僻，挑剔，讲话很快，忧郁。 特殊：必须以神话非信者开始游戏，详见规则书理智章节。
解谜人 谜题和暗语吸引着解谜人，他们依靠智慧和推理揭开谜团，解决麻烦。他们乐于寻找并享受脑力上的挑战，无论他们会面对怎样的后果和苦难，他们都会一直专注于寻找真相。 核心属性：INT 将100个奖励点数分配给：会计，估价，乔装，历史，法律，图书馆使用，聆听，神秘学，精神分析，科学(任意)，侦查，潜行。 建议职业：事务所侦探，作家，警探，联邦探员，调查记者，神秘学家，超心理学家，警探，通讯记者，间谍，学生。 天赋：任选两项。 建议特质：敢于冒险，只注意眼前，狡诈，自负，被驱使。
协助者 协助者拥有殉道者、叛逆浪人和刺激寻者的部分特质。通常，他们是还没有充分发掘自身潜力的年轻人，是寻求向导师学习的人，是站在聚光灯之外的人。又或者，协助者渴望成为英雄，可他们的能力却被同伴或导师所掩盖。协助者们有时会受困于内心的枷锁，他们充满想象但不切实际想法常常会给他们带来麻烦。这类人往往拥有强烈的道德准则和责任感。 核心属性：DEX或CON 将100个奖励点数分配给：驯兽，取悦，电气维修，话术，急救，跳跃，图书馆使用，聆听，导航，摄影，科学(任意)，潜行，追踪。 建议职业：作家，酒保/服务生，警探，管家，私人司机，医生，联邦探员，司机，飞贼，游民，性工作者，工人，图书馆管理员，护士，摄影师，科学家，秘书，混混，学生，部落成员。 天赋：任选两项。 建议特质：乐于助人，机智，忠诚，容易惹事，多疑，好奇，勇敢。 
殉道者 殉道者的体内激荡着正义之血。这类人保护弱者，将他人利益至于自己之前，愿意为了他人的安全牺牲自己。无论他们接受精神或是宗教的指引，还是遵循着某种内在的道德准则，他们都不会沉沦于别处的深渊，他们为荣耀而战，为身边的人树立榜样。无论他们想要守护什么，他们同样也为正义而战！ 核心属性：CON 将100个奖励点数分配给：会计，汽车驾驶，格斗(任意)，射击(手枪)，急救，历史，恐吓，法律，博物学，导航，说服，精神分析，骑术，侦查，生存(任意)。 建议职业：运动员，警探，管家，神职人员，私人司机，医生，政府官员，驱魔师，联邦探员，绅士/淑女，传教士，护士，警探，私家侦探，通讯记者，海员，士兵，部落成员。 天赋：任选两项。 建议特质：坚定，忠诚，坚决，信守承诺，奉献精神，严格而公正，可靠。
侠客 他们有着充满激情和理想主义的灵魂，总能救身陷险境的少女于水火之中。侠客们英勇无畏，以行动为导向，倡导公平决斗，蔑视用枪的懦夫。即使在危难关头，也能保持乐观、自负和聒噪。侠客有着浪漫的心和强烈的荣誉准则，但他们鲁莽的行为可能会危及所有人的生命。 核心属性：DEX或APP 将100个奖励点数分配给：技艺(任意)，取悦，取悦，格斗(任意)，跳跃，语言(任意)，机械维修，导航，操纵(任意)，潜行，游泳，投掷。 建议职业：演员，艺术家，特技飞行员，猎人，业余艺术爱好者，艺人，绅士/淑女，调查记者，军官，传教士，私家侦探，旅行家，海员，士兵，间谍。 天赋：任选两项。 建议特质：自负，英勇，行动优先，浪漫，热情，敏感。 
刺激寻者 一些人的人生有如飞蛾扑火。对这类人来说，安逸的生活简直算不得活着，他们从冒险和刺激中感受人生。对于刺激寻者而言，风险永远都不够高，他们随时准备面对更大的刺激来感受肾上腺素喷涌的感觉。这些悍不畏死的家伙乐于投入到极限运动当中，对他们来说，高山皆是挑战。他们总是无法理解为何没有人敢于像他们一样面对风险。 核心属性：DEX或POW 将100个奖励点数分配给：技艺(任意)，取悦，取悦，潜水，汽车驾驶，话术，跳跃，机械维修，导航，操纵(任意)，骑术，潜行，生存(任意)，游泳，投掷。 建议职业：演员，运动员，特技飞行员，银行劫匪，猎人，窃贼，业余艺术爱好者，艺人，探险家，赌徒，黑帮，司机，飞贼，绅士/淑女，性工作者，调查记者，传教士，音乐家，神秘学家，超心理学家，旅行家，海员，士兵，间谍，工会活动家，狂热者。 天赋：任选两项。 建议特质：冒失，敢于冒险，狂躁，爱出风头，喜欢自夸，容易制造麻烦。 
硬汉 “活得潇洒，死的自在”是硬汉的座右铭，他们总是能量爆棚，强壮，坚韧而富有才华。这类人倾向于用使用拳头而不是言语来解决问题，他们热爱在酒后畅所欲言，做事直截了当，反感仪式和礼节，向来讨厌与白痴共处。硬汉的生活匆忙而易怒，他们蔑视权威，但对于那些肮脏的招数，他们也会加倍奉陪。 核心属性：STR或SIZ 将100个奖励点数分配给：汽车驾驶，格斗(斗殴)，射击(任意)，恐吓，聆听，机械维修，侦查，游泳，投掷。 建议职业：事务所侦探，银行劫匪，警探，拳击手，黑帮，飞贼，打手，刺客，性工作者，工人，技师，护士，警探，旅行家，通讯记者，海员，士兵，混混，部落成员，工会活动家。 天赋：任选两项。 建议特质：坚韧，能干，坚定，易怒，暴力，邋遢，腐败，阴险。 '
"""
# re.findall("[^\s]+\s[^\s]+核心属性：[^\s]+\s将100个奖励点数分配给：.+建议职业：.+天赋：.+建议特质：[^\s]+\s",text)

e2c = {
    "STR":"力量",
    "CON":"体质",
    "SIZ":"体型",
    "DEX":"敏捷",
    "APP":"外貌",
    "INT":"智力",
    "POW":"意志",
    "EDU":"教育",
}


if __name__ == "__main__":
    ones = text.split("\n")
    result = {}
    for one in ones:
        pattern = re.compile(
            r'(?P<name>[^\s]+)\s(?P<miaoshu>.+)\s核心属性：(?P<shuxing>.+)\s将100个奖励点数分配给：(?P<jineng>.+)\s建议职业：(?P<zhiye>.+)\s天赋：(?P<tianfu>.+)\s建议特质：(?P<tezhi>.+)')
        match = pattern.match(one)

        if match:
            d = {
                "name": match.group("name").strip(),
                "描述": match.group("miaoshu").strip(),
                "核心属性": [e2c[a] for a in match.group("shuxing").strip().split("或")],
                "奖励点数": 100,
                "奖励技能": re.sub("\(.*?\)", "", match.group("jineng").strip()).replace("。","").split("，"),
                "建议职业": re.sub("\(.*?\)", "", match.group("zhiye").strip()).replace("。","").split("，"),
                "天赋": "" if match.group("tianfu").strip()=="任选两项。" else match.group("tianfu").strip().split("，")[-1].replace("。", ""),
                "建议特质": re.sub("\(.*?\)", "", match.group("tezhi").strip()).replace("。","").split("，"),
            }
            result[match.group("name").strip()] = d
    patten = "[^\s]+\s.+核心属性：[^\s]+将100个奖励点数分配给：.+建议职业：.+天赋：.+建议特质：[^\s]+\s"
    a = re.search(patten, text)
    print(text)